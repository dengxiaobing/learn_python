""" 利用位运算实现整数集合 """

# 一个数的二进制表示可以看作是一个集合（0 表示不在集合中，1 表示在集合中）。

# 比如集合 `{1, 3, 4, 8}`，可以表示成 `01 00 01 10 10` 而对应的位运算也就可以看作是对集合进行的操作。

# 元素与集合的操作：
# ```python
# a | (1<<i)  -> 把 i 插入到集合中
# a & ~(1<<i) -> 把 i 从集合中删除
# a & (1<<i)  -> 判断 i 是否属于该集合（零不属于，非零属于）
# ```

# 集合之间的操作：
# ```python
# a 补   -> ~a
# a 交 b -> a & b
# a 并 b -> a | b
# a 差 b -> a & (~b)
# ```

# 注意：整数在内存中是以补码的形式存在的，输出自然也是按照补码输出。

# 【例子】 Python 的`bin()` 输出。

print(bin(3))  # 0b11
print(bin(-3))  # -0b11

print(bin(-3 & 0xffffffff))
# 0b11111111111111111111111111111101

print(bin(0xfffffffd))
# 0b11111111111111111111111111111101

print(0xfffffffd)  # 4294967293
